"""fix_type

迁移 ID: 75d99bc06d8f
父迁移: 21e12f10c0fd
创建时间: 2025-07-12 22:21:32.469967

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

revision: str = "75d99bc06d8f"
down_revision: str | Sequence[str] | None = "21e12f10c0fd"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "suggar_user_data",
        sa.Column("user_id", sa.String(length=50), nullable=False),
        sa.Column("last_daily", sa.DateTime(), nullable=False),
        sa.Column("daily_count", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("user_id", name=op.f("pk_suggar_user_data")),
        info={"bind_key": ""},
    )
    with op.batch_alter_table("currency_meta", schema=None) as batch_op:
        batch_op.alter_column(
            "default_balance",
            existing_type=sa.NUMERIC(precision=16, scale=4),
            type_=sa.FLOAT(),
            existing_nullable=False,
        )

    with op.batch_alter_table("transactions", schema=None) as batch_op:
        batch_op.alter_column(
            "amount",
            existing_type=sa.NUMERIC(precision=16, scale=4),
            type_=sa.FLOAT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "balance_before",
            existing_type=sa.NUMERIC(precision=16, scale=4),
            type_=sa.FLOAT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "balance_after",
            existing_type=sa.NUMERIC(precision=16, scale=4),
            type_=sa.FLOAT(),
            existing_nullable=False,
        )

    with op.batch_alter_table("user_accounts", schema=None) as batch_op:
        batch_op.alter_column(
            "balance",
            existing_type=sa.NUMERIC(precision=16, scale=4),
            type_=sa.FLOAT(),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_accounts", schema=None) as batch_op:
        batch_op.alter_column(
            "balance",
            existing_type=sa.FLOAT(),
            type_=sa.NUMERIC(precision=16, scale=4),
            existing_nullable=False,
        )

    with op.batch_alter_table("transactions", schema=None) as batch_op:
        batch_op.alter_column(
            "balance_after",
            existing_type=sa.FLOAT(),
            type_=sa.NUMERIC(precision=16, scale=4),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "balance_before",
            existing_type=sa.FLOAT(),
            type_=sa.NUMERIC(precision=16, scale=4),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "amount",
            existing_type=sa.FLOAT(),
            type_=sa.NUMERIC(precision=16, scale=4),
            existing_nullable=False,
        )

    with op.batch_alter_table("currency_meta", schema=None) as batch_op:
        batch_op.alter_column(
            "default_balance",
            existing_type=sa.FLOAT(),
            type_=sa.NUMERIC(precision=16, scale=4),
            existing_nullable=False,
        )

    op.drop_table("suggar_user_data")
    # ### end Alembic commands ###
